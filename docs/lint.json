[
  {
    "name": "getCurrTile",
    "filePath": "src/client/js/global.js",
    "lines": [
      {
        "lineNumber": 159,
        "line": "/**\r"
      },
      {
        "lineNumber": 160,
        "line": " * Gets the tile directly underneath any object.\r"
      },
      {
        "lineNumber": 161,
        "line": " * @param {*} compound Compound object.\r"
      },
      {
        "lineNumber": 162,
        "line": " * @returns {string} one-letter ID of current tile.\r"
      },
      {
        "lineNumber": 163,
        "line": " */\r"
      },
      {
        "lineNumber": 164,
        "line": "export function getCurrTile(obj) {\r"
      }
    ],
    "codeParams": [
      "obj"
    ],
    "docParams": [
      "compound"
    ]
  },
  {
    "name": "createCompound",
    "filePath": "src/server/utils/compound.js",
    "lines": [
      {
        "lineNumber": 11,
        "line": "/**\r"
      },
      {
        "lineNumber": 12,
        "line": "  * Checks if a compound can be created, deducts craft material, and returns the new compound.\r"
      },
      {
        "lineNumber": 13,
        "line": "  * Does NOT add the new compound to the objects array.\r"
      },
      {
        "lineNumber": 14,
        "line": "  * @param data - Data sent from the client.\r"
      },
      {
        "lineNumber": 15,
        "line": "  *  - blueprint: The blueprint of the compound to create\r"
      },
      {
        "lineNumber": 16,
        "line": "  *  - sendingTeam: Team of the player who sent this\r"
      },
      {
        "lineNumber": 17,
        "line": "  *  - mousePos: Mouse position of the player who sent this. Contains x and y components\r"
      },
      {
        "lineNumber": 18,
        "line": "  *  - sender: Player who sent this\r"
      },
      {
        "lineNumber": 19,
        "line": "  *  - streamID: number indicating the consecutive compounds requested on this current mouse hold.\r"
      },
      {
        "lineNumber": 20,
        "line": "  * @param room - The name of the room\r"
      },
      {
        "lineNumber": 21,
        "line": "  */\r"
      },
      {
        "lineNumber": 22,
        "line": "export function createCompound(data, room, thisPlayer) {\r"
      }
    ],
    "codeParams": [
      "data",
      "room",
      "thisPlayer"
    ],
    "docParams": [
      "data",
      "room"
    ]
  },
  {
    "name": "tickCompound",
    "filePath": "src/server/utils/compound.js",
    "lines": [
      {
        "lineNumber": 73,
        "line": "/**\r"
      },
      {
        "lineNumber": 74,
        "line": " * Checks compound behavior based on compound type. Runs once a frame.\r"
      },
      {
        "lineNumber": 75,
        "line": " * @param {number} compound compound object\r"
      },
      {
        "lineNumber": 76,
        "line": " * @param {string} room Name of room\r"
      },
      {
        "lineNumber": 77,
        "line": " */\r"
      },
      {
        "lineNumber": 78,
        "line": "export function tickCompound(compound, room, socket) {\r"
      }
    ],
    "codeParams": [
      "compound",
      "room",
      "socket"
    ],
    "docParams": [
      "compound",
      "room"
    ]
  }
]